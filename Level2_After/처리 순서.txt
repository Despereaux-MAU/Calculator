1. Calculator 클래스에 입력은 0을 포함한 양의 정수 출력되도록
if문으로 작성
2. main에서 사칙연산 및 스캐너로 결과값 출력해주는 기능 추가
3. Calculator 클래스에 Final 로 상수 클래스로 변경
4. 연산자Operation 클래스에 연산자 작성
5. main 클래스에 new Calculator에 사칙연산 추가
6. AbstractOperation 클래스 Calculator 클래스에 상속
7. AbstractOperation 클래스 추상 클래스로 선언
8. 오류 (Calculator에 있는 연산자가 작동하지 않아, Main에 반영되지 않음 -> Override를 하게 되면
여러개의 인수를 하나밖에 사용하지 못함, AbstractOperation 이용하지 않기로 결정.)
9. Main의 결과값 Calculator에 저장(private) / 수정 / Main에서 삭제할 수 있게 만들기.
10. Calculator에서 결과값을 저장하려면 Calculator에서 사칙연산이 가능해야 함...
11. 다시 만들기

1. Main에서 결과값 출력 및 Calculator에 저장
2. Class Main과 Calculator 두개로 만들기
3. Calculator에 '0을 포함한 양의 정수 사칙연산' 추가
4. Main에 Scanner 추가해서 입력값 받기
5. String을 Long으로 변환하는 Long.parseLong 함수 사용
6. 첫번째&두번째 숫자 입력 시 문자를 입력하면 Try-Catch로 'NumberFormatException' 오류 예외처리
7. switch로 연산자 종류 입력 및 if 문으로 종료기능 추가
8. 설정된 연산 실행
9. Calculator 클래스에 연산 결과를 저장하는 리스트 생성
10. 결과값 반환, 출력, 첫번째 결과 삭제 메서드 추가
11. 사칙연산에 결과 저장 추가
12. Main switch에 첫 결과 삭제, 모든 결과 출력 추가
13. (오류) Getter에 sout 으로 else를 줬더니 return값 달라고 오류가 났음
 - IllegalStateException으로 throw 해서 해결!
14. (문제) 숫자 입력이 먼저 사용되니 기능이 이상하게 꼬임.
 - 사칙연산을 먼저 하도록 수정해서 해결